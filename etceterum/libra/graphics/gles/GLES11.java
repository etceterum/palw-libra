package etceterum.libra.graphics.gles;

import java.nio.Buffer;
import java.nio.FloatBuffer;
import java.nio.IntBuffer;

//converted from:
//http://www.jarvana.com/jarvana/view/org/khronos/opengl-api/gl1.1-android-2.1_r1/opengl-api-gl1.1-android-2.1_r1-sources.jar!/javax/microedition/khronos/opengles/GL11.java?format=ok
public interface GLES11 {
    //void glGetPointerv(int pname, Buffer[] params);
    void glBindBuffer(int target, int buffer);
    void glBufferData(int target, int size, Buffer data, int usage);
    void glBufferSubData(int target, int offset, int size, Buffer data);
    //void glClipPlanef(int plane, float[] equation, int offset);
    //void glClipPlanef(int plane, FloatBuffer equation);
    //void glClipPlanex(int plane, int[] equation, int offset);
    //void glClipPlanex(int plane, IntBuffer equation);
    void glColor4ub(byte red, byte green, byte blue, byte alpha);
    void glColorPointer(int size, int type, int stride, int offset);
    void glDeleteBuffers(int n, int[] buffers, int offset);
    void glDeleteBuffers(int n, IntBuffer buffers);
    void glDrawElements(int mode, int count, int type, int offset);
    void glGenBuffers(int n, int[] buffers, int offset);
    void glGenBuffers(int n, IntBuffer buffers);
    //void glGetBooleanv(int pname, boolean[] params, int offset);
    //void glGetBooleanv(int pname, IntBuffer params);
    void glGetBufferParameteriv(int target, int pname, int[] params, int offset);
    void glGetBufferParameteriv(int target, int pname, IntBuffer params);
    //void glGetClipPlanef(int pname, float[] eqn, int offset);
    //void glGetClipPlanef(int pname, FloatBuffer eqn);
    //void glGetClipPlanex(int pname, int[] eqn, int offset);
    //void glGetClipPlanex(int pname, IntBuffer eqn);
    //void glGetFixedv(int pname, int[] params, int offset);
    //void glGetFixedv(int pname, IntBuffer params);
    void glGetFloatv(int pname, float[] params, int offset);
    void glGetFloatv(int pname, FloatBuffer params);
    void glGetLightfv(int light, int pname, float[] params, int offset);
    void glGetLightfv(int light, int pname, FloatBuffer params);
    //void glGetLightxv(int light, int pname, int[] params, int offset);
    //void glGetLightxv(int light, int pname, IntBuffer params);
    void glGetMaterialfv(int face, int pname, float[] params, int offset);
    void glGetMaterialfv(int face, int pname, FloatBuffer params);
    //void glGetMaterialxv(int face, int pname, int[] params, int offset);
    //void glGetMaterialxv(int face, int pname, IntBuffer params);
    void glGetTexEnviv(int env, int pname, int[] params, int offset);
    void glGetTexEnviv(int env, int pname, IntBuffer params);
    //void glGetTexEnvxv(int env, int pname, int[] params, int offset);
    //void glGetTexEnvxv(int env, int pname, IntBuffer params);
    void glGetTexParameterfv(int target, int pname, float[] params, int offset);
    void glGetTexParameterfv(int target, int pname, FloatBuffer params);
    void glGetTexParameteriv(int target, int pname, int[] params, int offset);
    void glGetTexParameteriv(int target, int pname, IntBuffer params);
    //void glGetTexParameterxv(int target, int pname, int[] params, int offset);
    //void glGetTexParameterxv(int target, int pname, IntBuffer params);
    boolean glIsBuffer(int buffer);
    boolean glIsEnabled(int cap);
    boolean glIsTexture(int texture);
    void glNormalPointer(int type, int stride, int offset);
    void glPointParameterf(int pname, float param);
    void glPointParameterfv(int pname, float[] params, int offset);
    void glPointParameterfv(int pname, FloatBuffer params);
    //void glPointParameterx(int pname, int param);
    //void glPointParameterxv(int pname, int[] params, int offset);
    //void glPointParameterxv(int pname, IntBuffer params);
    //void glPointSizePointerOES(int type, int stride, Buffer pointer);
    void glTexCoordPointer(int size, int type, int stride, int offset);
    void glTexEnvi(int target, int pname, int param);
    void glTexEnviv(int target, int pname, int[] params, int offset);
    void glTexEnviv(int target, int pname, IntBuffer params);
    void glTexParameterfv(int target, int pname, float[] params, int offset);
    void glTexParameterfv(int target, int pname, FloatBuffer params);
    void glTexParameteri(int target, int pname, int param);
    void glTexParameteriv(int target, int pname, int[] params, int offset);
    void glTexParameteriv(int target, int pname, IntBuffer params);
    //void glTexParameterxv(int target, int pname, int[] params, int offset);
    //void glTexParameterxv(int target, int pname, IntBuffer params);
    void glVertexPointer(int size, int type, int stride, int offset);
    
    int GL_ACTIVE_TEXTURE();
    int GL_ADD_SIGNED();
    int GL_ALPHA_SCALE();
    int GL_ALPHA_TEST_FUNC();
    int GL_ALPHA_TEST_REF();
    int GL_ARRAY_BUFFER();
    int GL_ARRAY_BUFFER_BINDING();
    int GL_BLEND_DST();
    int GL_BLEND_SRC();
    int GL_BUFFER_ACCESS();
    int GL_BUFFER_SIZE();
    int GL_BUFFER_USAGE();
    int GL_CLIENT_ACTIVE_TEXTURE();
    int GL_CLIP_PLANE0();
    int GL_CLIP_PLANE1();
    int GL_CLIP_PLANE2();
    int GL_CLIP_PLANE3();
    int GL_CLIP_PLANE4();
    int GL_CLIP_PLANE5();
    int GL_COLOR_ARRAY_BUFFER_BINDING();
    int GL_COLOR_ARRAY_POINTER();
    int GL_COLOR_ARRAY_SIZE();
    int GL_COLOR_ARRAY_STRIDE();
    int GL_COLOR_ARRAY_TYPE();
    int GL_COLOR_CLEAR_VALUE();
    int GL_COLOR_WRITEMASK();
    int GL_COMBINE();
    int GL_COMBINE_ALPHA();
    int GL_COMBINE_RGB();
    int GL_CONSTANT();
    //int GL_COORD_REPLACE_OES();
    int GL_CULL_FACE_MODE();
    int GL_CURRENT_COLOR();
    int GL_CURRENT_NORMAL();
    int GL_CURRENT_TEXTURE_COORDS();
    int GL_DEPTH_CLEAR_VALUE();
    int GL_DEPTH_FUNC();
    int GL_DEPTH_RANGE();
    int GL_DEPTH_WRITEMASK();
    int GL_DOT3_RGB();
    int GL_DOT3_RGBA();
    int GL_DYNAMIC_DRAW();
    int GL_ELEMENT_ARRAY_BUFFER();
    int GL_ELEMENT_ARRAY_BUFFER_BINDING();
    int GL_FRONT_FACE();
    int GL_GENERATE_MIPMAP();
    int GL_GENERATE_MIPMAP_HINT();
    int GL_INTERPOLATE();
    int GL_LINE_WIDTH();
    int GL_LOGIC_OP_MODE();
    int GL_MATRIX_MODE();
    int GL_MAX_CLIP_PLANES();
    int GL_MODELVIEW_MATRIX();
    //int GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES();
    int GL_MODELVIEW_STACK_DEPTH();
    int GL_NORMAL_ARRAY_BUFFER_BINDING();
    int GL_NORMAL_ARRAY_POINTER();
    int GL_NORMAL_ARRAY_STRIDE();
    int GL_NORMAL_ARRAY_TYPE();
    int GL_OPERAND0_ALPHA();
    int GL_OPERAND0_RGB();
    int GL_OPERAND1_ALPHA();
    int GL_OPERAND1_RGB();
    int GL_OPERAND2_ALPHA();
    int GL_OPERAND2_RGB();
    int GL_POINT_DISTANCE_ATTENUATION();
    int GL_POINT_FADE_THRESHOLD_SIZE();
    int GL_POINT_SIZE();
    //int GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES();
    //int GL_POINT_SIZE_ARRAY_OES();
    //int GL_POINT_SIZE_ARRAY_POINTER_OES();
    //int GL_POINT_SIZE_ARRAY_STRIDE_OES();
    //int GL_POINT_SIZE_ARRAY_TYPE_OES();
    int GL_POINT_SIZE_MAX();
    int GL_POINT_SIZE_MIN();
    //int GL_POINT_SPRITE_OES();
    int GL_POLYGON_OFFSET_FACTOR();
    int GL_POLYGON_OFFSET_UNITS();
    int GL_PREVIOUS();
    int GL_PRIMARY_COLOR();
    int GL_PROJECTION_MATRIX();
    //int GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES();
    int GL_PROJECTION_STACK_DEPTH();
    int GL_RGB_SCALE();
    int GL_SAMPLE_BUFFERS();
    int GL_SAMPLE_COVERAGE_INVERT();
    int GL_SAMPLE_COVERAGE_VALUE();
    int GL_SAMPLES();
    int GL_SCISSOR_BOX();
    int GL_SHADE_MODEL();
    int GL_SRC0_ALPHA();
    int GL_SRC0_RGB();
    int GL_SRC1_ALPHA();
    int GL_SRC1_RGB();
    int GL_SRC2_ALPHA();
    int GL_SRC2_RGB();
    int GL_STATIC_DRAW();
    int GL_STENCIL_CLEAR_VALUE();
    int GL_STENCIL_FAIL();
    int GL_STENCIL_FUNC();
    int GL_STENCIL_PASS_DEPTH_FAIL();
    int GL_STENCIL_PASS_DEPTH_PASS();
    int GL_STENCIL_REF();
    int GL_STENCIL_VALUE_MASK();
    int GL_STENCIL_WRITEMASK();
    int GL_SUBTRACT();
    int GL_TEXTURE_BINDING_2D();
    int GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING();
    int GL_TEXTURE_COORD_ARRAY_POINTER();
    int GL_TEXTURE_COORD_ARRAY_SIZE();
    int GL_TEXTURE_COORD_ARRAY_STRIDE();
    int GL_TEXTURE_COORD_ARRAY_TYPE();
    int GL_TEXTURE_MATRIX();
    //int GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES();
    int GL_TEXTURE_STACK_DEPTH();
    int GL_VERTEX_ARRAY_BUFFER_BINDING();
    int GL_VERTEX_ARRAY_POINTER();
    int GL_VERTEX_ARRAY_SIZE();
    int GL_VERTEX_ARRAY_STRIDE();
    int GL_VERTEX_ARRAY_TYPE();
    int GL_VIEWPORT();
    int GL_WRITE_ONLY();
}
